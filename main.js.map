{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_services/message.service.ts","webpack:///./src/app/_services/survey.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/form/form.component.css","webpack:///./src/app/form/form.component.html","webpack:///./src/app/form/form.component.ts","webpack:///./src/app/sort/sort.component.css","webpack:///./src/app/sort/sort.component.html","webpack:///./src/app/sort/sort.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {MessageService} from './message.service';\nimport {Observable, of} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {environment} from \"../../environments/environment\";\n\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service class\n * @author Peter Charles Sims\n */\nexport class SurveyService {\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) { }\n//\n  /**\n   * Returns tab view and the questions from the tab view\n   * @param ID\n   * GET request to druapl using the entityId associated with the tab view\n   */\n  getTabView(ID: number): Observable<string> {\n      const url = `${environment.formServerURL}${ID}/${'?_format=json'}`;\n      return this.http.get<string>(url)\n          .pipe(\n              tap(_ => this.log('fetched tabViews')),\n              catchError(this.handleError<string>('getTabViewList', ))\n          );\n  }\n\n    submitSurvey(payload: string): Observable<any> {\n        console.log(payload);\n        const url = `${environment.submitSurveyURL}`;\n        return this.http\n            .post<string>(url, payload, httpOptions)\n            .pipe(\n                tap(_ => this.log(`Deployed Survey`)),\n                catchError(this.handleError<any>('addSurvey', payload))\n            );\n    }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n  /** Log a SurveyService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`SurveyService: ${message}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SortComponent} from './sort/sort.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: ':id', pathMatch: 'full' },\n    { path: ':id', component: SortComponent },\n];\n\n@NgModule({\n  imports: [\n      [ RouterModule.forRoot(routes)]\n  ],\n    exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \".dashboard {\\n    /*position: fixed;*/\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsTUFBTTtJQUNOLE9BQU87SUFDUCxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXNoYm9hcmQge1xuICAgIC8qcG9zaXRpb246IGZpeGVkOyovXG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<body>\\n<div class=\\\"dashboard\\\">\\n    <!--Top Dashboard-->\\n    <div class=\\\"dashboard\\\">\\n        <app-dashboard></app-dashboard>\\n    </div>\\n</div>\\n<router-outlet></router-outlet>\\n</body>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FormServer';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { FormComponent } from './form/form.component';\nimport { NgXformModule } from '@esss/ng-xform';\nimport { SortComponent } from './sort/sort.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormComponent,\n    SortComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgXformModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"#dashboard {\\n    z-index: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2Rhc2hib2FyZCB7XG4gICAgei1pbmRleDogMTtcbn1cbiJdfQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark \\\" style=\\\"background-color: #016fbe\\\" id=\\\"dashboard\\\" >\\n    <img src=\\\"../../assets/logo.png\\\" alt=\\\"[LOGO]\\\" style=\\\"height: 60px; width: 60px\\\">\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#wrapper {\\n    margin: auto;\\n    width: 70%;\\n    align-content: center;\\n}\\n#title {\\n    text-align: center ;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9ybS9mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osVUFBVTtJQUNWLHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvZm9ybS9mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjd3JhcHBlciB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHdpZHRoOiA3MCU7XG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xufVxuI3RpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXIgO1xufVxuIl19 */\"","module.exports = \"<br>\\n<div id=\\\"wrapper\\\" *ngIf=\\\"survey\\\">\\n    <h2 id=\\\"title\\\">{{tabTitle}}</h2>\\n    <ng-xform-edit-save  [horizontalForm]=\\\"horizontal\\\" [labelWidth]=\\\"labelWidth\\\" [fields]=\\\"fields\\\" (submit)=\\\"onSubmit($event)\\\" [(editing)]=\\\"editing\\\" id=\\\"xform\\\"></ng-xform-edit-save>\\n</div>\\n<br><br>\\n\\n\"","import {Component, Input, NgModule, OnDestroy, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {AppComponent} from '../app.component';\nimport {\n    CheckboxField,\n    DynamicField,\n    NgXformEditSaveComponent,\n    NgXformModule, NumberField, RadioGroupField,\n    SelectField,\n    TextField\n} from '@esss/ng-xform';\nimport {Observable, of, Subject, Subscription} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {Title} from '@angular/platform-browser';\nimport {Validators} from '@angular/forms';\n\nimport {ActivatedRoute, RouterModule} from '@angular/router';\nimport {Survey} from '../Survey';\n\nimport {delay} from 'rxjs/operators';\nimport {SurveyService} from \"../_services/survey.service\";\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\n\n@NgModule({\n  declarations: [AppComponent] ,\n    imports: [NgXformModule, RouterModule],\n  bootstrap: [AppComponent]\n})\n/**\n * Class the displays the form\n * @author Peter Charles Sims\n */\nexport class FormComponent implements OnInit, OnDestroy {\n\n  @ViewChild(NgXformEditSaveComponent) xformComponent: NgXformEditSaveComponent;\n  @ViewChild('customField') customFieldTmpl: TemplateRef<any>;\n\n    @Input() survey: Survey;\n    @Input() tabTitle: string;\n\n\n  public onchangefn = new Subject<string>();\n\n  public fields: DynamicField[];\n  public horizontal = false;\n  public labelWidth = 1000;\n  public model: any;\n  public outputhelper = {A: 1, B: 2, C: 3};\n  public subscriptions: Subscription[] = [];\n  public editing = true;\n\n  constructor(\n        private titleService: Title,\n        private http: HttpClient,\n        private surveyService: SurveyService\n  ) {}\n\n  ngOnInit() {\n    const minDate = new Date();\n    const maxDate = new Date();\n\n    this.subscriptions.push(this.onchangefn.asObservable().subscribe(\n      (value: any) => this.xformComponent.setValue({outputopt: this.outputhelper[value]})\n    ));\n\n    minDate.setDate(minDate.getDate() - 3);\n    maxDate.setDate(maxDate.getDate() + 3);\n    this.titleService.setTitle(this.tabTitle);\n\n    this.initField();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * This function is used to init the fields array.\n   * The fields will be used to display the different type of questions\n   */\n  public initField(): void {\n\n      this.fields = [\n          new TextField({\n              key: 'first_name',\n              label: 'First Name',\n          }),\n          new TextField({\n              key: 'last_name',\n              label: 'Last Name',\n          }),\n          new TextField({\n              key: 'mrn',\n              label: 'Medical Record Number (MRN)',\n          })\n      ];\n\n      for (let i = 0; i < this.survey.assessments.length; i++) {\n          this.removeField(i);\n          let required = this.survey.assessments[i].assessmentRequired;\n          switch (this.survey.assessments[i].assessmentDisplayType) {\n              case 'Radio':\n                  this.createRadioGroup(i, required);\n                  break;\n              case 'SelectMany':\n                  this.createSelectMany(i, required);\n                  break;\n              case 'SelectOne':\n                  this.createSelect(i, required);\n                  break;\n              case 'Text':\n                  this.createText(i, required);\n                  break;\n              case 'Number':\n                  this.createNumber(i, required);\n                  break;\n              default:\n                  console.log(\"Invalid Type\");\n          }\n      }\n  }\n\n    /**\n     * This funtion is used to create a SelectField\n     * @param i Is used to determine which assessment has been inputed\n     */\n    public createSelect(i: number, optional) {\n\n        let options = this.createOptions(i);\n        let validate = this.checkValidation(optional);\n        let tempField: SelectField;\n\n        // Check if field already exists\n        if (this.fieldCheck(i, 'SELECT')) {\n            this.removeField(i);\n        }\n        // Push new select into the fields array\n        tempField = new SelectField({\n            key: this.survey.assessments[i].assessmentId.toString(),\n            label: this.survey.assessments[i].assessmentDescription,\n            searchable: false,\n            options: options,\n            addNewOption: true,\n            addNewOptionText: 'id',\n            optionLabelKey: 'choiceDesc',\n            validators: [\n                validate,\n                Validators.minLength(1)\n            ],\n        });\n        const delta = Number(this.survey.assessments[i].assessmentDelta);\n        this.orderField(delta, tempField);\n    }\n\n    /**\n     * This funtion is used to create a SelectField\n     * @param i Is used to determine which assessment has been inputed\n     */\n    public createSelectMany(i: number, optional: string) {\n\n        let options = this.createOptions(i);\n        let validate = this.checkValidation(optional);\n        let tempField: SelectField;\n\n        // Check if field already exists\n        if (this.fieldCheck(i, 'SELECT')) {\n            this.removeField(i);\n        }\n        // Push new select into the fields array\n        tempField = new SelectField({\n            key: this.survey.assessments[i].assessmentId.toString(),\n            label: this.survey.assessments[i].assessmentDescription,\n            searchable: true,\n            options: options,\n            addNewOption: true,\n            addNewOptionText: 'id',\n            optionLabelKey: 'choiceDesc',\n            multiple: true,\n            validators: [\n                validate,\n                Validators.minLength(1)\n            ]\n        });\n        const delta = Number(this.survey.assessments[i].assessmentDelta);\n        this.orderField(delta, tempField);\n    }\n\n    /**\n     * This funtion is used to create a RadioGroup\n     * @param i Is used to determine which assessment has been inputed\n     */\n    public createRadioGroup(i: number, optional: string) {\n\n        let options = this.createOptions(i);\n        let validate = this.checkValidation(optional);\n        let tempField: RadioGroupField;\n\n        // Check if field already exists\n        if (this.fieldCheck(i, 'RADIOGROUP')) {\n            return;\n        }\n        // Push new radio group into the fields array\n        tempField = new RadioGroupField({\n            key: this.survey.assessments[i].assessmentId.toString(),\n            label: this.survey.assessments[i].assessmentDescription,\n            options: of(options).pipe(delay(10)),\n            optionValueKey: 'id',\n            optionLabelKey: 'choiceDesc',\n            validators: [\n                validate,\n                Validators.minLength(1)\n            ]\n        });\n        const delta = Number(this.survey.assessments[i].assessmentDelta);\n        this.orderField(delta, tempField);\n    }\n\n    /**\n     * Used to create a TextField\n     * @param i Is used to determine which assessment has been inputed\n     */\n    public createText(i: number, optional: string) {\n\n        let tempField: TextField;\n        let validate = this.checkValidation(optional);\n        // Check if field already exists\n        if (this.fieldCheck(i, 'TEXT')) {\n            return;\n        }\n        // Push new text field into the fields array\n        tempField = new TextField({\n            key: this.survey.assessments[i].assessmentId,\n            label: this.survey.assessments[i].assessmentDescription,\n            validators: [\n                validate,\n                Validators.minLength(1)\n            ]\n        });\n        const delta = Number(this.survey.assessments[i].assessmentDelta);\n        this.orderField(delta, tempField);\n\n    }\n\n    /**\n     * Used to create a NumberField\n     * @param i Is used to determine which assessment has been inputed\n     */\n    public createNumber(i: number, optional: string): void {\n\n        let tempField: NumberField;\n        let validate = this.checkValidation(optional);\n        // Check if field already exists\n        if (this.fieldCheck(i, 'NUMBER')) {\n            return;\n        }\n        // Push new number field into the fields array\n        tempField = new NumberField({\n            key: this.survey.assessments[i].assessmentId,\n            label: this.survey.assessments[i].assessmentDescription,\n            validators: [\n                validate,\n                Validators.minLength(1)\n            ]\n        });\n        const delta = Number(this.survey.assessments[i].assessmentDelta);\n        this.orderField(delta, tempField);\n    }\n\n    /**\n     * This function will return a boolean whether or not an element already exists in the array\n     * @param i\n     * i is the index of the array which will be checked\n     * @param fieldType\n     */\n    public fieldCheck(i: number, fieldType: string): boolean {\n        let j = 0;\n        let validator;\n        validator = this.checkValidation(this.survey.assessments[i].assessmentRequired);\n        for (j; j < this.fields.length; j++) {\n            if (this.fields[j].key === this.survey.assessments[i].assessmentId && fieldType === this.fields[j].controlType\n                && this.fields[j].validators[0] === validator) {\n                return true;\n            } else if (this.fields[j].key === this.survey.assessments[i].assessmentId) {\n                this.removeField(j);\n                return false;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * This function will remove a specified element in the fields array\n     * @param i\n     * i is the index of the array which will be removed\n     */\n    public removeField(i: number) {\n        this.fields.splice(i, 1);\n    }\n\n    /**\n     * This function is used to order the position of a newly added field\n     * @param i\n     * i is the index of the array which will be added\n     */\n    public orderField(i: number, field: any) {\n        this.fields.splice(i, 0, field);\n    }\n\n    public createOptions(i: number): any[] {\n        let options = [];\n        this.survey.assessments[i].assessmentChoices.forEach(element => {\n            options.push((element.choiceId, element.choiceDescription));\n        });\n        return options;\n    }\n\n  public onSubmit(values: object) {\n    this.model = values;\n    const payload = JSON.stringify(this.model);\n    this.submitForm(payload);\n  }\n\n  public submitForm(payload: string) {\n      this.surveyService\n          .submitSurvey(payload) // Add the survey\n          .subscribe(\n              res => {\n                  console.log(res);\n              }\n          );\n  }\n\n    public checkValidation(optional: string) {\n        let validate;\n        if(optional === '0') {\n            validate = Validators.minLength(1);\n        } else {\n            validate = Validators.required;\n        }\n        return validate;\n    }\n\n    /**\n     * Determines if positions are equal to each other\n     * @param x start position\n     * @param y new position\n     */\n    public checkPos(x: number, y: number) : number {\n        if(x === y) {\n            return x;\n        } else {\n            return y;\n        }\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NvcnQvc29ydC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div id=\\\"survey\\\" *ngIf=\\\"survey\\\">\\n    <app-form [survey]=\\\"survey\\\" [tabTitle]=\\\"tabTitle\\\"></app-form>\\n</div>\"","import {Component, OnInit, Provider} from '@angular/core';\nimport {TabView} from '../TabView';\nimport {Survey} from '../Survey';\nimport {Assessment} from '../Assessment';\nimport {Choice} from '../Choice';\nimport {HttpClient} from '@angular/common/http';\nimport {SurveyService} from '../_services/survey.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-sort',\n  templateUrl: './sort.component.html',\n  styleUrls: ['./sort.component.css'],\n})\n/**\n * @author Peter Charles Sims\n */\nexport class SortComponent implements OnInit {\n\n    /**\n     * The id from the URL is linked to the entity ID of the tabview\n     */\n    private id = +this.route.snapshot.paramMap.get('id');\n    /**\n     * Stores an array of TabViews that have been imported from Drupal\n     */\n    private tabViews: TabView [];\n    /**\n     * An instance of a Survey\n     */\n    private survey: Survey;\n\n    private tabTitle: string;\n\n    private str: any;\n\n  constructor(\n      private http: HttpClient,\n      private route: ActivatedRoute,\n      private formService: SurveyService\n  ) { }\n\n  ngOnInit() {\n    // this.createSurvey(); // Create an instance of a survey\n    console.log(this.id);\n    this.getTabView();\n  }\n\n    /**\n     * GET tab views\n     * Async task that uses the service class to interface with Drupal\n     * Retrieved data from drupal is then stored into an array of TabViews\n     * Once completed, the TabViews are then sorted into the Survey Class\n     */\n    public getTabView() {\n        this.formService.getTabView(this.id)\n            .subscribe(\n                data => this.str = data, // Move data into TabView\n                err => console.log(err), // Log any Errors\n                () => this.sortSurvey()); // Sort tabviews into a Survey\n    }\n\n    /**\n     * Sorts out the tabviews that were retrieved from Drupal\n     * Creates assessments and their choices by iterating through the tabviews\n     * Once an assessment is created and it's choices have been populated\n     * Then it is added into the Survey\n     */\n    public sortSurvey(): void {\n        const json = JSON.parse(this.str);\n        eval(json);\n        this.survey = json;\n        this.tabTitle = this.survey.tabViewLabel;\n\n    }\n\n    public submitSurvey(payload: string) {\n\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n    formServerURL: 'http://mysite.com/',\n    submitSurveyURL: 'http://mysite.com/form-data',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}